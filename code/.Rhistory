agedata[[xi]][[yi]]$totalvol <- scale(agedata[[xi]][[yi]]$totalvol, center = T, scale = T)
}
}
## model analysis WITHOUT totalvol+WBhreg
lmer_obj_noTVWB = matrix(list(),6,2)
for (fi in 1: length(folders)) {
for (ni in 1:length(regions)) {
print(sprintf("processing %s / %s", folders[fi], regions[ni]))
lmer_obj_noTVWB [[ni,fi]] = lmer(Hreg ~Rest_Ex *age_centered * hemisphere
+ (1 + Rest_Ex + hemisphere |  idno) ,
data =  agedata[[fi]][[ni]],
control=lmerControl(optimizer = "nmkbw", optCtrl = list(maxfeval = 200000)))
}
}
## model analysis WITH totalvol+WBhreg
lmer_obj_wTVWB = matrix(list(),6,2)
for (fi in 1: length(folders)) {
for (ni in 1:length(regions)) {
print(sprintf("processing %s / %s", folders[fi], regions[ni]))
lmer_obj_wTVWB [[ni,fi]] = lmer(Hreg ~Rest_Ex *age_centered * hemisphere + totalvol + WB_Hreg
+ (1 + Rest_Ex + hemisphere |  idno) ,
data =  agedata[[fi]][[ni]],
control=lmerControl(optimizer = "nmkbw", optCtrl = list(maxfeval = 200000)))
}
}
#summary table
dt_summary = matrix(list(),6,4)
colregions(dt_summary) = c("noTVWB_mean_signal" , "noTVWB_p20_signal", "wTVWB_mean_signal", "wTVWB_p20_signal")
#summary table
dt_summary = matrix(list(),6,4)
colregions(dt_summary) = c("noTVWB_mean_signal" , "noTVWB_p20_signal", "wTVWB_mean_signal", "wTVWB_p20_signal")
rownames(dt_summary) = regions
col.regions(dt_summary) = c("noTVWB_mean_signal" , "noTVWB_p20_signal", "wTVWB_mean_signal", "wTVWB_p20_signal")
colnames(dt_summary) = c("noTVWB_mean_signal" , "noTVWB_p20_signal", "wTVWB_mean_signal", "wTVWB_p20_signal")
rownames(dt_summary) = regions
for (ri in 1:6) {
for (ci in 1:2) {
dt_summary[[ri,ci]] = summary(lmer_obj_noTVWB[[ri,ci]])
}
for (ci in 3:4) {
dt_summary[[ri,ci]] = summary(lmer_obj_wTVWB[[ri,ci-2]])
}
}
dt_summary
## images
#visualization of model estimates with region:
output_plot<- function(lmer_obj){
output_plot=plot_model(lmer_obj, type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3)
# output_plot$theme = theme(axis.text = element_text(size = 15),
#                           legend.text = element_text(size=15))
return(output_plot)
}
dim(dt_summary)
dt_summary[[1,1]]
dt_summary[[1,2]]
dt_summary[[1,3]]
dt_summary[[1,4]]
dt_summary[[2,4]]
dt_summary[[2,3]]
dt_summary[[2,2]]
dt_summary[[2,1]]
#plotting
types = c("noTVWB_mean_signal" , "noTVWB_p20_signal", "wTVWB_mean_signal", "wTVWB_p20_signal")
for (ni in 1:length(regions)) {
png(print(sprintf("../result/%s.png", regions[ni])))
rplot_1 = output_plot(lmer_obj_noTVWB[[ni,1]])
rplot_2 = output_plot(lmer_obj_noTVWB[[ni,2]])
rplot_3 = output_plot(lmer_obj_wTVWB[[ni,1]])
rplot_4 = output_plot(lmer_obj_wTVWB[[ni,2]])
gg = ggarrange(rplot_1, rplot_2, rplot_3, rplot_4, labels = types,
ncol = 2, nrow = 2, font.label = list(size = 10),common.legend = TRUE)
print(gg)
dev.off()
}
ni = 1
sprintf("../result/%s.png", regions[ni])
print(sprintf("../result/%s.png", regions[ni]))
png(print(sprintf("../result/%s.png", regions[ni])))
library(png)
for (ni in 1:length(regions)) {
png(print(sprintf("../result/%s.png", regions[ni])))
rplot_1 = output_plot(lmer_obj_noTVWB[[ni,1]])
rplot_2 = output_plot(lmer_obj_noTVWB[[ni,2]])
rplot_3 = output_plot(lmer_obj_wTVWB[[ni,1]])
rplot_4 = output_plot(lmer_obj_wTVWB[[ni,2]])
gg = ggarrange(rplot_1, rplot_2, rplot_3, rplot_4, labels = types,
ncol = 2, nrow = 2, font.label = list(size = 10),common.legend = TRUE)
print(gg)
dev.off()
}
print(sprintf("../result/%s.png", regions[ni]))
for (ni in 1:length(regions)) {
png(print(sprintf("../result/%s.png", regions[ni])))
rplot_1 = output_plot(lmer_obj_noTVWB[[ni,1]])
rplot_2 = output_plot(lmer_obj_noTVWB[[ni,2]])
rplot_3 = output_plot(lmer_obj_wTVWB[[ni,1]])
rplot_4 = output_plot(lmer_obj_wTVWB[[ni,2]])
gg = ggarrange(rplot_1, rplot_2, rplot_3, rplot_4, labels = types,
ncol = 2, nrow = 2, font.label = list(size = 10),common.legend = TRUE)
print(gg)
dev.off()
}
dt_summary[[1]]$residuals
dt_summary[[1]]
lmer_obj_wTVWB[[1,1]]
a=lmer_obj_wTVWB[[1,1]]
a@resp
a@vcov_varpar
a@vcov_beta
a@resp
b = summary(a)
b$coefficients
b$sigma
b$AICtab
b$residuals
length(b$residuals)
length(b$devcomp)
b$devcomp
r.squaredGLMM(lmer_obj_noTVWB[[1,1]])
dt
dt_summary
dt_summary
dt_summary[[1,1]]
dt_summary[[2,1]]
dt_summary[[3,1]]
dt_summary[[4,1]]
dt_summary[[5,1]]
dt_summary[[6,1]]
dt_summary
dt_summary[[1,2]]
dt_summary[[2,2]]
dt_summary[[3,2]]
dt_summary[[4,2]]
dt_summary[[5,2]]
dt_summary[[6,2]]
dt_summary
dt_summary[[1,3]]
dt_summary[[2,3]]
dt_summary[[3,3]]
dt_summary[[4,3]]
dt_summary[[5,3]]
dt_summary[[6,3]]
dt_summary[[6,4]]
dt_summary[[5,4]]
dt_summary[[3,4]]
dt_summary[[4,4]]
dt_summary[[3,4]]
dt_summary[[3,4]]
dt_summary[[2,4]]
dt_summary[[1,4]]
dt_summary
#get r sqr
#summary table
dt_r2 = matrix(list(),6,4)
colnames(dt_r2) = c("noTVWB_mean_signal" , "noTVWB_p20_signal", "wTVWB_mean_signal", "wTVWB_p20_signal")
rownames(dt_r2) = regions
for (ri in 1:6) {
for (ci in 1:2) {
dt_r2[[ri,ci]] = r.squaredGLMM(lmer_obj_noTVWB[[ri,ci]])
}
for (ci in 3:4) {
dt_r2[[ri,ci]] = r.squaredGLMM(lmer_obj_wTVWB[[ri,ci-2]])
}
}
dt_r2
dt_r2[[1,1]]
dt_r2[[1,1]][2]
for (ri in 1:6) {
for (ci in 1:2) {
dt_r2[[ri,ci]] = r.squaredGLMM(lmer_obj_noTVWB[[ri,ci]])[2]
}
for (ci in 3:4) {
dt_r2[[ri,ci]] = r.squaredGLMM(lmer_obj_wTVWB[[ri,ci-2]])[2]
}
}
dt_r2
getwd()
lmer_obj_noTVWB
folders
dt
td
#lmer_obj table
td = matrix(list(),6,4)
colnames(td) = c("noTVWB_mean_signal" , "noTVWB_p20_signal", "wTVWB_mean_signal", "wTVWB_p20_signal")
rownames(td) = regions
for (ri in 1:6) {
for (ci in 1:2) {
td[[ri,ci]] = lmer_obj_noTVWB[[ri,ci]]
}
for (ci in 3:4) {
td[[ri,ci]] = lmer_obj_wTVWB[[ri,ci-2]]
}
}
td
#plotting
types = c("noTVWB_mean_signal" , "noTVWB_p20_signal", "wTVWB_mean_signal", "wTVWB_p20_signal")
for (ni in 1:length(types)) {
png(print(sprintf("../result/%s.png", types[ni])))
rplot_1 = output_plot(td[[1,ni]])
rplot_2 = output_plot(td[[2,ni]])
rplot_3 = output_plot(td[[3,ni]])
rplot_4 = output_plot(td[[4,ni]])
rplot_5 = output_plot(td[[5,ni]])
rplot_6 = output_plot(td[[6,ni]])
gg = ggarrange(rplot_1, rplot_2, rplot_3, rplot_4, rplot_5, rplot_6, labels = regions,
ncol = 2, nrow = 3, font.label = list(size = 10),common.legend = TRUE)
print(gg)
dev.off()
}
for (ni in 1:length(types)) {
png(print(sprintf("../result/%s.png", types[ni])))
rplot_1 = output_plot(td[[1,ni]])
rplot_2 = output_plot(td[[2,ni]])
rplot_3 = output_plot(td[[3,ni]])
rplot_4 = output_plot(td[[4,ni]])
rplot_5 = output_plot(td[[5,ni]])
rplot_6 = output_plot(td[[6,ni]])
gg = ggarrange(rplot_1, rplot_2, rplot_3, rplot_4, rplot_5, rplot_6, labels = regions,
ncol = 3, nrow = 2, font.label = list(size = 10),common.legend = TRUE)
print(gg)
dev.off()
}
?plot_model
output_plot(td[[1,1]])
output_plot(td[[1,1]],axis.labels = "")
output_plot(td[[1,1]],axis.labels = "")
output_plot(td[[1,1]],axis.labels = " ")
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.labels = "")
output_plot(td[[1,1]])
output_plot(td[[1,1]]) & theme_sjplot2() &theme(axis.text = element_text(size = 15),
legend.text = element_text(size=15))
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.labels = "") & theme_sjplot2() &theme(axis.text = element_text(size = 15),
legend.text = element_text(size=15))
output_plot(td[[1,1]])
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,auto.label = FALSE)
output_plot(td[[1,1]]) & theme_sjplot2()
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title =  = "")
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "")
plot_model(td[[1,1]], type = "pred", terms = c("Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "")
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "")
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3)
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "")
?theme_sjplot2()
output_plot=plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere","region"),
show.data = TRUE,dot.size = 1.3)
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"),
+                        show.data = TRUE,dot.size = 1.3)
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"),
+                        show.data = TRUE,dot.size = 1.3)
output_plot=plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3)
output_plot & theme_sjplot2() &theme(axis.text = element_text(size = 15),
legend.text = element_text(size=15))
View(rplot_1)
?ggarrange
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"),
+                        show.data = TRUE,dot.size = 1.3)
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "")
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "", xlb = '')
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "", xlab = '')
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "", xlim = c(-20,20))
?plot_model
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "", axis.labels = "")
?plot_model
xlim(c(0,20))
xlim(0,20
)
plot_model
plot_type_est
plot_type_eff
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "", axis.labels = "")
plot_model(td[[1,1]], xlim=c(0,10),type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "", axis.labels = "")
plot_model(td[[1,1]], xlim=c(0,10),type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "", axis.labels = "", axis.lim(list(c(0,10,c(-0.3, 0)))))
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "", axis.labels = "", axis.lim(list(c(0,10,c(-0.3, 0)))))
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "", axis.labels = "",
axis.lim(list(c(0,10),c(-0.3, 0))))
tlim= c(0,10)
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "", axis.labels = "",
axis.lim(tlim))
library(ggplot2)
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "", axis.labels = "",
axis.lim(tlim)) + xlim(0,10)
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "", axis.labels = "",
axis.lim(tlim)) + xlim(0,10) + xlab('')
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "", axis.labels = "",
axis.lim(tlim)) + xlim(0,10) + xlab('') + theme_bw()
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "", axis.labels = "",
axis.lim(tlim)) + xlim(0,10) + xlab('') + theme_bw() +theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "", axis.labels = "",
axis.lim(tlim)) + xlab('') + theme_bw() +theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "", axis.labels = "",
axis.lim(tlim)) + xlab('') + theme_bw()
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "", axis.labels = "",
axis.lim(tlim)) + xlab('') +  theme_minimal()
+  theme_minimal()
+ xlab('') +  theme_minimal()
+  theme_minimal()
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "")
+  theme_minimal()
+  theme_minimal()
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "", axis.labels = "",
axis.lim(tlim)) + xlab('') + theme_bw()
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "", axis.labels = "",
axis.lim(tlim)) + xlab('') + heme_minimal()
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "", axis.labels = "",
axis.lim(tlim)) + xlab('') + theme_minimal()
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 2,axis.title = "", axis.labels = "",
axis.lim(tlim)) + xlab('') + theme_minimal()
1.3
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "", axis.labels = "",
axis.lim(tlim)) + xlab('') + theme_minimal()
plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "", axis.labels = "",
axis.lim(tlim),show.legend = FALSE) + xlab('') + theme_minimal()
#visualization of model estimates with region:
output_plot<- function(lmer_obj){
# output_plot = plot_model(lmer_obj, type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
# show.data = TRUE,dot.size = 1.3)  + xlab('') + theme_minimal()
output_plot = plot_model(td[[1,1]], type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "", axis.labels = "",
axis.lim(tlim)) + xlab('') + theme_minimal()
}
for (ni in 1:length(types)) {
png(print(sprintf("../result/%s.png", types[ni])))
rplot_1 = output_plot(td[[1,ni]])
rplot_2 = output_plot(td[[2,ni]])
rplot_3 = output_plot(td[[3,ni]])
rplot_4 = output_plot(td[[4,ni]])
rplot_5 = output_plot(td[[5,ni]])
rplot_6 = output_plot(td[[6,ni]])
gg = ggarrange(rplot_1, rplot_2, rplot_3, rplot_4, rplot_5, rplot_6, labels = regions,
ncol = 3, nrow = 2, font.label = list(size = 10),common.legend = TRUE)
print(gg)
dev.off()
}
for (ni in 1:length(types)) {
rplot_1 = output_plot(td[[1,ni]])
rplot_2 = output_plot(td[[2,ni]])
rplot_3 = output_plot(td[[3,ni]])
rplot_4 = output_plot(td[[4,ni]])
rplot_5 = output_plot(td[[5,ni]])
rplot_6 = output_plot(td[[6,ni]])
ggarrange(rplot_1, rplot_2, rplot_3, rplot_4, rplot_5, rplot_6, labels = regions,
ncol = 3, nrow = 2, font.label = list(size = 10),common.legend = TRUE)  %>%
ggexport(filename = print(sprintf("../result/%s.png", types[ni])))
}
for (ni in 1:length(types)) {
rplot_1 = output_plot(td[[1,ni]])
rplot_2 = output_plot(td[[2,ni]])
rplot_3 = output_plot(td[[3,ni]])
rplot_4 = output_plot(td[[4,ni]])
rplot_5 = output_plot(td[[5,ni]])
rplot_6 = output_plot(td[[6,ni]])
ggarrange(rplot_1, rplot_2, rplot_3, rplot_4, rplot_5, rplot_6, labels = regions,
ncol = 3, nrow = 2, font.label = list(size = 10),common.legend = TRUE)  %>%
ggexport(filename = print(sprintf("../result/%s.png", types[ni])))
}
ni = 1
rplot_1 = output_plot(td[[1,ni]])
rplot_2 = output_plot(td[[2,ni]])
rplot_3 = output_plot(td[[3,ni]])
rplot_4 = output_plot(td[[4,ni]])
rplot_5 = output_plot(td[[5,ni]])
rplot_6 = output_plot(td[[6,ni]])
ggarrange(rplot_1, rplot_2, rplot_3, rplot_4, rplot_5, rplot_6, labels = regions,
ncol = 3, nrow = 2, font.label = list(size = 10),common.legend = TRUE)  %>%
ggexport(filename = print(sprintf("../result/%s.png", types[ni], res = 250)))
?ggexport
for (ni in 1:length(types)) {
rplot_1 = output_plot(td[[1,ni]])
rplot_2 = output_plot(td[[2,ni]])
rplot_3 = output_plot(td[[3,ni]])
rplot_4 = output_plot(td[[4,ni]])
rplot_5 = output_plot(td[[5,ni]])
rplot_6 = output_plot(td[[6,ni]])
ggarrange(rplot_1, rplot_2, rplot_3, rplot_4, rplot_5, rplot_6, labels = regions,
ncol = 3, nrow = 2, font.label = list(size = 10),common.legend = TRUE)  %>%
ggexport(filename = print(sprintf("../result/%s.png", types[ni])), width = 800,
height = 800, res = 400)
}
tlim= c(0,10)
for (ni in 1:length(types)) {
rplot_1 = output_plot(td[[1,ni]])
rplot_2 = output_plot(td[[2,ni]])
rplot_3 = output_plot(td[[3,ni]])
rplot_4 = output_plot(td[[4,ni]])
rplot_5 = output_plot(td[[5,ni]])
rplot_6 = output_plot(td[[6,ni]])
ggarrange(rplot_1, rplot_2, rplot_3, rplot_4, rplot_5, rplot_6, labels = regions,
ncol = 3, nrow = 2, font.label = list(size = 10),common.legend = TRUE)  %>%
ggexport(filename = print(sprintf("../result/%s.png", types[ni])),res = 400)
}
?ggarrange
ni = 1
rplot_1 = output_plot(td[[1,ni]])
rplot_2 = output_plot(td[[2,ni]])
rplot_3 = output_plot(td[[3,ni]])
rplot_4 = output_plot(td[[4,ni]])
rplot_5 = output_plot(td[[5,ni]])
rplot_6 = output_plot(td[[6,ni]])
ggarrange(rplot_1, rplot_2, rplot_3, rplot_4, rplot_5, rplot_6, labels = regions,
ncol = 3, nrow = 2, font.label = list(size = 10),common.legend = TRUE)  %>%
ggexport(filename = print(sprintf("../result/%s.png", types[ni])),res = 400)
ggarrange(rplot_1, rplot_2, rplot_3, rplot_4, rplot_5, rplot_6, labels = regions,
ncol = 3, nrow = 2, font.label = list(size = 10),common.legend = TRUE)
ni = 1
ni = 4
rplot_1 = output_plot(td[[1,ni]])
rplot_2 = output_plot(td[[2,ni]])
rplot_3 = output_plot(td[[3,ni]])
rplot_4 = output_plot(td[[4,ni]])
rplot_5 = output_plot(td[[5,ni]])
rplot_6 = output_plot(td[[6,ni]])
ggarrange(rplot_1, rplot_2, rplot_3, rplot_4, rplot_5, rplot_6, labels = regions,
ncol = 3, nrow = 2, font.label = list(size = 10),common.legend = TRUE)
ggarrange(rplot_1, rplot_2, rplot_3, rplot_4, rplot_5, rplot_6, labels = regions,
ncol = 3, nrow = 2, font.label = list(size = 10),common.legend = TRUE)
ni = 1
rplot_1 = output_plot(td[[1,ni]])
rplot_2 = output_plot(td[[2,ni]])
rplot_3 = output_plot(td[[3,ni]])
rplot_4 = output_plot(td[[4,ni]])
rplot_5 = output_plot(td[[5,ni]])
rplot_6 = output_plot(td[[6,ni]])
ggarrange(rplot_1, rplot_2, rplot_3, rplot_4, rplot_5, rplot_6, labels = regions,
ncol = 3, nrow = 2, font.label = list(size = 10),common.legend = TRUE)
#visualization of model estimates with region:
output_plot<- function(lmer_obj){
# output_plot = plot_model(lmer_obj, type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
# show.data = TRUE,dot.size = 1.3)  + xlab('') + theme_minimal()
output_plot = plot_model(lmer_obj, type = "pred", terms = c("age_centered","Rest_Ex","hemisphere"), title = "",
show.data = TRUE,dot.size = 1.3,axis.title = "", axis.labels = "",
axis.lim(tlim)) + xlab('') + theme_minimal()
}
ni = 1
rplot_1 = output_plot(td[[1,ni]])
rplot_2 = output_plot(td[[2,ni]])
rplot_3 = output_plot(td[[3,ni]])
rplot_4 = output_plot(td[[4,ni]])
rplot_5 = output_plot(td[[5,ni]])
rplot_6 = output_plot(td[[6,ni]])
ggarrange(rplot_1, rplot_2, rplot_3, rplot_4, rplot_5, rplot_6, labels = regions,
ncol = 3, nrow = 2, font.label = list(size = 10),common.legend = TRUE)
ni = 2
rplot_1 = output_plot(td[[1,ni]])
rplot_2 = output_plot(td[[2,ni]])
rplot_3 = output_plot(td[[3,ni]])
rplot_4 = output_plot(td[[4,ni]])
rplot_5 = output_plot(td[[5,ni]])
rplot_6 = output_plot(td[[6,ni]])
ggarrange(rplot_1, rplot_2, rplot_3, rplot_4, rplot_5, rplot_6, labels = regions,
ncol = 3, nrow = 2, font.label = list(size = 10),common.legend = TRUE)
ni = 3
rplot_1 = output_plot(td[[1,ni]])
rplot_2 = output_plot(td[[2,ni]])
rplot_3 = output_plot(td[[3,ni]])
rplot_4 = output_plot(td[[4,ni]])
rplot_5 = output_plot(td[[5,ni]])
rplot_6 = output_plot(td[[6,ni]])
ggarrange(rplot_1, rplot_2, rplot_3, rplot_4, rplot_5, rplot_6, labels = regions,
ncol = 3, nrow = 2, font.label = list(size = 10),common.legend = TRUE)
ni = 4
rplot_1 = output_plot(td[[1,ni]])
rplot_2 = output_plot(td[[2,ni]])
rplot_3 = output_plot(td[[3,ni]])
rplot_4 = output_plot(td[[4,ni]])
rplot_5 = output_plot(td[[5,ni]])
rplot_6 = output_plot(td[[6,ni]])
ggarrange(rplot_1, rplot_2, rplot_3, rplot_4, rplot_5, rplot_6, labels = regions,
ncol = 3, nrow = 2, font.label = list(size = 10),common.legend = TRUE)
